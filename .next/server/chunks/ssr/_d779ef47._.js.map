{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/MarkdownRenderer.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const MarkdownRenderer = registerClientReference(\n    function() { throw new Error(\"Attempted to call MarkdownRenderer() from the server but MarkdownRenderer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/MarkdownRenderer.tsx <module evaluation>\",\n    \"MarkdownRenderer\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,qEACA","debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/MarkdownRenderer.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const MarkdownRenderer = registerClientReference(\n    function() { throw new Error(\"Attempted to call MarkdownRenderer() from the server but MarkdownRenderer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/MarkdownRenderer.tsx\",\n    \"MarkdownRenderer\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,iDACA","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/docs/page.tsx"],"sourcesContent":["import { getDocContent } from '@/lib/docs';\nimport { MarkdownRenderer } from '@/components/MarkdownRenderer';\nimport { notFound } from 'next/navigation';\n\nexport default function DocsPage() {\n  // Try to load the introduction.md file\n  const introContent = getDocContent(['introduction']);\n  \n  if (!introContent) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"space-y-2\">\n          <h1 className=\"text-4xl font-bold tracking-tight\">Documentation</h1>\n          <p className=\"text-xl text-muted-foreground\">\n            Welcome to our documentation site\n          </p>\n        </div>\n        \n        <div className=\"prose prose-neutral dark:prose-invert max-w-none\">\n          <p>\n            This documentation site automatically generates navigation from Markdown files \n            in the <code>content/docs</code> folder.\n          </p>\n          \n          <h2>Getting Started</h2>\n          <p>\n            To add new documentation:\n          </p>\n          <ol>\n            <li>Create a new <code>.md</code> file in the <code>content/docs</code> folder</li>\n            <li>The file will automatically appear in the navigation</li>\n            <li>Use standard Markdown syntax with GitHub Flavored Markdown support</li>\n          </ol>\n          \n          <h2>Features</h2>\n          <ul>\n            <li><strong>Automatic Navigation</strong>: Files are automatically added to the sidebar based on folder structure</li>\n            <li><strong>GitHub Flavored Markdown</strong>: Full support for tables, code blocks, and more</li>\n            <li><strong>Copy Code Blocks</strong>: Code blocks have automatic copy buttons</li>\n            <li><strong>Responsive Design</strong>: Works on all devices</li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <MarkdownRenderer content={introContent.content} />\n    </div>\n  );\n}\n\nexport const metadata = {\n  title: 'Documentation',\n  description: 'Browse our comprehensive documentation',\n};\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAGe,SAAS;IACtB,uCAAuC;IACvC,MAAM,eAAe,CAAA,GAAA,kHAAA,CAAA,gBAAa,AAAD,EAAE;QAAC;KAAe;IAEnD,IAAI,CAAC,cAAc;QACjB,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAoC;;;;;;sCAClD,8OAAC;4BAAE,WAAU;sCAAgC;;;;;;;;;;;;8BAK/C,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;;gCAAE;8CAEM,8OAAC;8CAAK;;;;;;gCAAmB;;;;;;;sCAGlC,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAE;;;;;;sCAGH,8OAAC;;8CACC,8OAAC;;wCAAG;sDAAa,8OAAC;sDAAK;;;;;;wCAAU;sDAAa,8OAAC;sDAAK;;;;;;wCAAmB;;;;;;;8CACvE,8OAAC;8CAAG;;;;;;8CACJ,8OAAC;8CAAG;;;;;;;;;;;;sCAGN,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;;8CACC,8OAAC;;sDAAG,8OAAC;sDAAO;;;;;;wCAA6B;;;;;;;8CACzC,8OAAC;;sDAAG,8OAAC;sDAAO;;;;;;wCAAiC;;;;;;;8CAC7C,8OAAC;;sDAAG,8OAAC;sDAAO;;;;;;wCAAyB;;;;;;;8CACrC,8OAAC;;sDAAG,8OAAC;sDAAO;;;;;;wCAA0B;;;;;;;;;;;;;;;;;;;;;;;;;IAKhD;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,sIAAA,CAAA,mBAAgB;YAAC,SAAS,aAAa,OAAO;;;;;;;;;;;AAGrD;AAEO,MAAM,WAAW;IACtB,OAAO;IACP,aAAa;AACf","debugId":null}},
    {"offset": {"line": 327, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/node_modules/next/dist/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAczC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;YAEP;QACF,OAAO;;QAMP;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 365, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: (id: string | number) => unknown\ndeclare const __next_app_load_chunk__: (id: string | number) => Promise<unknown>\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base' with { 'turbopack-transition': 'next-server-utility' }\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AACA,SAASA,kBAAkB,QAAQ,2DAA2D;AAAqC,EAAC;IACzE,wBAAwB;AAWnF,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;IAEkD,wBAAwB;AAOhG,iCAAiC;AAuBjC,GAAE;;;;;;;;;;IAnBAM,WAAWC,0DAAAA;AACb,EAAC,QAAA;AAED,MAAA,OAAA;IAAc;IAAA,sCAA0C;YAAE,QAAA;YAAA;YAAA,OAAwB;gBAAsB,EAAC,UAAA;oBAAA;oBAAA,CAEzG;oBAAA,yDAA4D;wBAC5D,KAAO,KAAA,CAAMC;wBAAAA,QAAc;4BAAA,GAAIX,CAAAA,gBAAmB;4BAAA;yBAAA;;mBAChDY,YAAY;;iBACVC,MAAMZ,UAAUa,QAAQ;sBACxBC,IAAAA,CAAM,CAAA;gBAAA,UAAA;oBAAA,IAAA;oBAAA;iBAAA;;eACNC,UAAU;;SACV,2CAA2C;cAC3CC,IAAAA;YAAAA,IAAAA,CAAY;YAAA;SAAA;cACZC,OAAAA;YAAAA,EAAU,EAAA;YAAA;SAAA;cACVC,OAAAA;YAAAA,EAAU,EAAE;YAAA;SAAA;UACd,cAAA;YAAA,IAAA;YAAA;SAAA;;GACAC,UAAU;QACRC,MAAAA;IAAAA,KAAYnB;CAAAA","ignoreList":[0],"debugId":null}}]
}